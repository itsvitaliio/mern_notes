{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mern_notes\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport AuthPage from './pages/authentication/authPage';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.authenticate = () => {\n      this.setState({\n        authenticated: true\n      });\n    };\n\n    this.pageManager = state => {\n      let page = null;\n\n      if (state.authenticated) {// switch\n      } else {\n        page = /*#__PURE__*/_jsxDEV(AuthPage, {\n          authenticate: this.authenticate.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this);\n      }\n\n      return page;\n    };\n\n    this.state = {\n      authenticated: false\n    };\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies();\n\n    if (cookies.get('token')) {\n      axios.post('http://localhost:9000/authenticate', {\n        username: localStorage.getItem('username')\n      }, {\n        withCredentials: true\n      }).then(res => {\n        if (res.status === 200) {\n          this.props.authenticate();\n        } else {\n          cookies.remove('token');\n          console.log('Bad cookie');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.pageManager(this.state)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/mern_notes/frontend/src/App.js"],"names":["React","AuthPage","axios","Cookies","App","Component","constructor","props","authenticate","setState","authenticated","pageManager","state","page","bind","componentDidMount","cookies","get","post","username","localStorage","getItem","withCredentials","then","res","status","remove","console","log","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AACA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SA6BlBC,YA7BkB,GA6BH,MAAK;AAClB,WAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAAd;AACD,KA/BiB;;AAAA,SAiClBC,WAjCkB,GAiCHC,KAAD,IAAU;AACtB,UAAIC,IAAI,GAAG,IAAX;;AACA,UAAGD,KAAK,CAACF,aAAT,EAAuB,CACrB;AACD,OAFD,MAEK;AACHG,QAAAA,IAAI,gBAAG,QAAC,QAAD;AAAU,UAAA,YAAY,EAAE,KAAKL,YAAL,CAAkBM,IAAlB,CAAuB,IAAvB;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,aAAOD,IAAP;AACD,KAzCiB;;AAEhB,SAAKD,KAAL,GAAY;AACVF,MAAAA,aAAa,EAAE;AADL,KAAZ;AAGD;;AAGDK,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,OAAO,GAAG,IAAIb,OAAJ,EAAhB;;AACA,QAAGa,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAH,EAAwB;AACtBf,MAAAA,KAAK,CAACgB,IAAN,CAAW,oCAAX,EAAiD;AACvCC,QAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAD6B,OAAjD,EAES;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAFT,EAGOC,IAHP,CAGaC,GAAD,IAAO;AACT,YAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAChB,eAAKlB,KAAL,CAAWC,YAAX;AACH,SAFD,MAEK;AACHQ,UAAAA,OAAO,CAACU,MAAR,CAAe,OAAf;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AAEJ,OAXP,EAYOC,KAZP,CAYcC,GAAD,IAAO;AACVH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,OAdP;AAeD;AACF;;AAeDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACG,KAAKpB,WAAL,CAAiB,KAAKC,KAAtB;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAjD6C","sourcesContent":["import React from 'react';\n\nimport AuthPage from './pages/authentication/authPage';\n\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      authenticated: false,\n    }\n  }\n  \n\n  componentDidMount(){\n    const cookies = new Cookies();\n    if(cookies.get('token')){\n      axios.post('http://localhost:9000/authenticate', {\n                username: localStorage.getItem('username'),\n            }, {withCredentials: true})\n            .then((res)=>{\n                if(res.status===200){\n                    this.props.authenticate();\n                }else{\n                  cookies.remove('token');\n                  console.log('Bad cookie');\n                }\n                \n            })\n            .catch((err)=>{\n                console.log(err);\n            });\n    }\n  }\n\n  authenticate = () =>{\n    this.setState({authenticated: true});\n  }\n\n  pageManager = (state) =>{\n    let page = null;\n    if(state.authenticated){\n      // switch\n    }else{\n      page = <AuthPage authenticate={this.authenticate.bind(this)}/>\n    }\n    return page;\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        {this.pageManager(this.state)}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}