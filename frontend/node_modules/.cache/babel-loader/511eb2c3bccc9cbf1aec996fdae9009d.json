{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mern_notes\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport AuthPage from './pages/authentication/authPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pageManager = state => {\n      let page = null;\n\n      if (state.authenticated) {\n        page = /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this);\n      } else {//switch\n      }\n\n      return page;\n    };\n\n    this.state = {\n      authenticated: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.page(this.state)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/mern_notes/frontend/src/App.js"],"names":["React","AuthPage","App","Component","constructor","props","pageManager","state","page","authenticated","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAO,WAAP;;AAEA,eAAe,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAMlBC,WANkB,GAMHC,KAAD,IAAU;AACtB,UAAIC,IAAI,GAAG,IAAX;;AACA,UAAGD,KAAK,CAACE,aAAT,EAAuB;AACrBD,QAAAA,IAAI,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEK,CACH;AACD;;AACD,aAAOA,IAAP;AACD,KAdiB;;AAEhB,SAAKD,KAAL,GAAY;AACVE,MAAAA,aAAa,EAAE;AADL,KAAZ;AAGD;;AAUDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACG,KAAKF,IAAL,CAAU,KAAKD,KAAf;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtB6C","sourcesContent":["import React from 'react';\n\nimport AuthPage from './pages/authentication/authPage';\n\nimport './App.css';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      authenticated: false,\n    }\n  }\n  pageManager = (state) =>{\n    let page = null;\n    if(state.authenticated){\n      page = <AuthPage/>;\n    }else{\n      //switch\n    }\n    return page;\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        {this.page(this.state)}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}