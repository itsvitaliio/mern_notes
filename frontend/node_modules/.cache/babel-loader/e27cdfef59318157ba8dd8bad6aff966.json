{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mern_notes\\\\frontend\\\\src\\\\pages\\\\authentication\\\\authPage.js\";\nimport React from \"react\";\nimport '../../components/authentication/input/field.css';\nimport '../../components/authentication/buttons/authBtns.css';\nimport './authPage.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AuthPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.register = () => {\n      const state = this.state;\n\n      if (state.username && state.password && state.confirmPassword) {\n        console.log(\"All fields are filled.\");\n\n        if (state.password === state.confirmPassword) {\n          console.log(\"Passwords match\");\n          axios.post('http://localhost:9000/register', {\n            username: state.username,\n            password: state.password\n          }).then(res => {\n            if (res.status === 200) {\n              this.props.authenticate();\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      }\n    };\n\n    this.updateUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.updatePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.updateConfirmPassword = e => {\n      this.setState({\n        confirmPassword: e.target.value\n      });\n    };\n\n    this.confirmPasswordRender = state => {\n      if (state.mode === 'register') {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.confirmPassword,\n          onChange: this.updateConfirmPassword,\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.actionBtnRender = state => {\n      if (state.mode === 'register') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authBtn\",\n          onClick: this.register,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authBtn\",\n          onClick: this.register,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.switchBtnRender = state => {\n      if (state.mode === 'register') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authBtn\",\n          onClick: this.register,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authBtn\",\n          onClick: this.register,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.username,\n        onChange: this.updateUsername,\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.password,\n        onChange: this.updatePassword,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/mern_notes/frontend/src/pages/authentication/authPage.js"],"names":["React","axios","AuthPage","Component","constructor","props","register","state","username","password","confirmPassword","console","log","post","then","res","status","authenticate","catch","err","updateUsername","e","setState","target","value","updatePassword","updateConfirmPassword","confirmPasswordRender","mode","actionBtnRender","switchBtnRender","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../../components/authentication/input/field.css';\r\nimport '../../components/authentication/buttons/authBtns.css';\r\nimport './authPage.css';\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class AuthPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    register = () =>{\r\n        const state = this.state;\r\n        if(state.username&&state.password&&state.confirmPassword){\r\n            console.log(\"All fields are filled.\")\r\n            if(state.password===state.confirmPassword){\r\n                console.log(\"Passwords match\");\r\n                axios.post('http://localhost:9000/register', {\r\n                    username: state.username,\r\n                    password: state.password\r\n                })\r\n                .then((res)=>{\r\n                    if(res.status===200){\r\n                        this.props.authenticate();\r\n                    }\r\n                })\r\n                .catch((err)=>{\r\n                    console.log(err);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    updateUsername = (e) =>{\r\n        this.setState({\r\n            username: e.target.value,\r\n        })\r\n    }\r\n    updatePassword = (e) =>{\r\n        this.setState({\r\n            password: e.target.value,\r\n        })\r\n    }\r\n    updateConfirmPassword = (e) =>{\r\n        this.setState({\r\n            confirmPassword: e.target.value,\r\n        })\r\n    }\r\n\r\n    confirmPasswordRender = (state) =>{\r\n        if(state.mode==='register'){\r\n            return <input value={this.state.confirmPassword}\r\n                onChange={this.updateConfirmPassword}\r\n                placeholder=\"Confirm Password\"/>;\r\n        }\r\n    }\r\n\r\n    actionBtnRender = (state) =>{\r\n        if(state.mode==='register'){\r\n            return <div className=\"authBtn\" onClick={this.register}>Sign Up</div>\r\n        }else{\r\n            return <div className=\"authBtn\" onClick={this.register}>Log In</div>\r\n        }\r\n    }\r\n\r\n    switchBtnRender = (state) =>{\r\n        if(state.mode==='register'){\r\n            return <div className=\"authBtn\" onClick={this.register}>Log In</div>\r\n        }else{\r\n            return <div className=\"authBtn\" onClick={this.register}>Sign Up</div>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"body\">\r\n                <input value={this.state.username} onChange={this.updateUsername} placeholder=\"Username\"/>\r\n                <input value={this.state.password} onChange={this.updatePassword} placeholder=\"Password\"/>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}