{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mern_notes\\\\frontend\\\\src\\\\pages\\\\authentication\\\\authPage.js\";\nimport React from \"react\";\nimport '../../components/authentication/input/field.css';\nimport '../../components/authentication/buttons/authBtns.css';\nimport './authPage.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AuthPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.login = () => {\n      const state = this.state;\n\n      if (state.username && state.password) {\n        axios.post('http://localhost:9000/login', {\n          username: state.username,\n          password: state.password\n        }, {\n          withCredentials: true\n        }).then(res => {\n          console.log(\"Response\");\n\n          if (res.status === 200) {\n            localStorage.setItem('username', state.username);\n            this.props.authenticate();\n          } else {\n            console.log(res.status);\n            console.log(res.data);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.register = () => {\n      console.log('Pressed sign up');\n      const state = this.state;\n\n      if (state.username && state.password && state.confirmPassword) {\n        console.log(\"All fields are filled.\");\n\n        if (state.password === state.confirmPassword) {\n          console.log(\"Passwords match\");\n          axios.post('http://localhost:9000/register', {\n            username: state.username,\n            password: state.password\n          }, {\n            withCredentials: true\n          }).then(res => {\n            if (res.status === 200) {\n              this.login();\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      }\n    };\n\n    this.switchMode = () => {\n      if (this.state.mode === 'register') {\n        this.setState({\n          mode: 'login'\n        });\n      } else {\n        this.setState({\n          mode: 'register'\n        });\n      }\n    };\n\n    this.updateUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.updatePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.updateConfirmPassword = e => {\n      this.setState({\n        confirmPassword: e.target.value\n      });\n    };\n\n    this.confirmPasswordRender = state => {\n      if (state.mode === 'register') {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.confirmPassword,\n          onChange: this.updateConfirmPassword,\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.actionBtnRender = state => {\n      let action;\n      let text;\n\n      if (state.mode === 'register') {\n        text = 'Sign Up';\n        action = this.register;\n      } else {\n        text = 'Log In';\n        action = this.login;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authBtn\",\n        onClick: action,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.switchBtnRender = state => {\n      let text = 'Log In';\n\n      if (state.mode === 'register') {\n        text = 'Log In';\n      } else {\n        text = 'Sign Up';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authBtn\",\n        onClick: this.switchMode,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.state = {\n      mode: 'register'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.username,\n        onChange: this.updateUsername,\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.password,\n        onChange: this.updatePassword,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), this.confirmPasswordRender(this.state), this.actionBtnRender(this.state), this.switchBtnRender(this.state)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/mern_notes/frontend/src/pages/authentication/authPage.js"],"names":["React","axios","AuthPage","Component","constructor","props","login","state","username","password","post","withCredentials","then","res","console","log","status","localStorage","setItem","authenticate","data","catch","err","register","confirmPassword","switchMode","mode","setState","updateUsername","e","target","value","updatePassword","updateConfirmPassword","confirmPasswordRender","actionBtnRender","action","text","switchBtnRender","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../../components/authentication/input/field.css';\r\nimport '../../components/authentication/buttons/authBtns.css';\r\nimport './authPage.css';\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class AuthPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mode: 'register',\r\n        }\r\n    }\r\n\r\n    login = () =>{\r\n        const state = this.state;\r\n        if(state.username&&state.password){\r\n            axios.post('http://localhost:9000/login', {\r\n                username: state.username,\r\n                password: state.password\r\n            }, {withCredentials: true})\r\n            .then((res)=>{\r\n                console.log(\"Response\");\r\n                if(res.status===200){\r\n                    localStorage.setItem('username', state.username);\r\n                    this.props.authenticate();\r\n                }else{\r\n                    console.log(res.status);\r\n                    console.log(res.data);\r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    register = () =>{\r\n        console.log('Pressed sign up');\r\n        const state = this.state;\r\n        if(state.username&&state.password&&state.confirmPassword){\r\n            console.log(\"All fields are filled.\")\r\n            if(state.password===state.confirmPassword){\r\n                console.log(\"Passwords match\");\r\n                axios.post('http://localhost:9000/register', {\r\n                    username: state.username,\r\n                    password: state.password\r\n                }, {withCredentials:true})\r\n                .then((res)=>{\r\n                    if(res.status===200){\r\n                        this.login();\r\n                    }\r\n                })\r\n                .catch((err)=>{\r\n                    console.log(err);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    switchMode = () =>{\r\n        if(this.state.mode==='register'){    \r\n            this.setState({\r\n                mode: 'login'\r\n            })\r\n        }else{  \r\n            this.setState({\r\n                mode: 'register'\r\n            })\r\n        }\r\n    }\r\n\r\n    updateUsername = (e) =>{\r\n        this.setState({\r\n            username: e.target.value,\r\n        })\r\n    }\r\n    updatePassword = (e) =>{\r\n        this.setState({\r\n            password: e.target.value,\r\n        })\r\n    }\r\n    updateConfirmPassword = (e) =>{\r\n        this.setState({\r\n            confirmPassword: e.target.value,\r\n        })\r\n    }\r\n\r\n    confirmPasswordRender = (state) =>{\r\n        if(state.mode==='register'){\r\n            return <input value={this.state.confirmPassword}\r\n                onChange={this.updateConfirmPassword}\r\n                placeholder=\"Confirm Password\"/>;\r\n        }\r\n    }\r\n\r\n    actionBtnRender = (state) =>{\r\n        let action;\r\n        let text;\r\n        if(state.mode==='register'){\r\n            text = 'Sign Up'\r\n            action = this.register;\r\n        }else{\r\n            text = 'Log In'\r\n            action = this.login;\r\n        }\r\n        \r\n        return <div className=\"authBtn\" onClick={action}>{text}</div>\r\n    }\r\n\r\n    switchBtnRender = (state) =>{\r\n        let text = 'Log In'\r\n\r\n        if(state.mode==='register'){\r\n            text = 'Log In';\r\n        }else{\r\n            text = 'Sign Up';\r\n        }\r\n        \r\n        return <div className=\"authBtn\" onClick={this.switchMode}>{text}</div>\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"body\">\r\n                <input value={this.state.username} onChange={this.updateUsername} placeholder=\"Username\"/>\r\n                <input value={this.state.password} onChange={this.updatePassword} placeholder=\"Password\"/>\r\n                {this.confirmPasswordRender(this.state)}\r\n                {this.actionBtnRender(this.state)}\r\n                {this.switchBtnRender(this.state)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}